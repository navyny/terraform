--------------------------**************************--------------------------------------
provider "azurerm" {
version = "=2.44"
features{}
}

resource "azurerm_resource_group" "rg"{
    name = "NZE-P-DMZROK-RGP-001"
    location = "East Us 2"
    tags = {
        ENVIRONMENT= "PROD"
        MANAGEDBY="IT_NS"
    }
}
-------------------------************************-----------------------------------------------
Save this file as "main-rg.tf" in tf-azure-rg Folder:

PS C:\tools\terraform\tf-azure-rg> ls


    Directory: C:\tools\terraform\tf-azure-rg


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----         1/25/2021   9:19 PM            182 main-rg.tf

----------------------------------------------------------------------------
Once you do "terraform init" in that folder...2 new files will be added:

PS C:\tools\terraform\tf-azure-rg> ls


    Directory: C:\tools\terraform\tf-azure-rg


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         1/25/2021   9:22 PM                .terraform
-a----         1/25/2021   9:22 PM           1006 .terraform.lock.hcl
-a----         1/25/2021   9:19 PM            182 main-rg.tf


PS C:\tools\terraform\tf-azure-rg>

---------------------------------------------------------------------------------

STEP :1

PS C:\tools\terraform\tf-azure-rg> terraform init

Initializing the backend...

Initializing provider plugins...
- Finding latest version of hashicorp/azurerm...
- Installing hashicorp/azurerm v2.44.0...
- Installed hashicorp/azurerm v2.44.0 (signed by HashiCorp)

Terraform has created a lock file .terraform.lock.hcl to record the provider
selections it made above. Include this file in your version control repository
so that Terraform can guarantee to make the same selections by default when
you run "terraform init" in the future.

Terraform has been successfully initialized!

You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.
PS C:\tools\terraform\tf-azure-rg>

-------------------------------------------------------------------------------------

I encountered this error when I ran 
STEP 2: terraform plan

Error: "features": required field is not set

Addind Features {} fixed this:

------------------------------------------------------------------------------------
STEP 2: terraform plan

PS C:\tools\terraform\tf-azure-rg> terraform plan

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus2"
      + name     = "NZE-P-DMZROK-RGP-001"
      + tags     = {
          + "ENVIRONMENT" = "PROD"
          + "MANAGEDBY"   = "IT_NS"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.

Warning: Version constraints inside provider configuration blocks are deprecated

  on main-rg.tf line 2, in provider "azurerm":
   2: version = "=2.44"

Terraform 0.13 and earlier allowed provider version constraints inside the
provider configuration block, but that is now deprecated and will be removed
in a future version of Terraform. To silence this warning, move the provider
version constraint into the required_providers block.


------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

PS C:\tools\terraform\tf-azure-rg>


----------------------------******************------------------------------------

STEP: 3


PS C:\tools\terraform\tf-azure-rg> terraform apply

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # azurerm_resource_group.rg will be created
  + resource "azurerm_resource_group" "rg" {
      + id       = (known after apply)
      + location = "eastus2"
      + name     = "NZE-P-DMZROK-RGP-001"
      + tags     = {
          + "ENVIRONMENT" = "PROD"
          + "MANAGEDBY"   = "IT_NS"
        }
    }

Plan: 1 to add, 0 to change, 0 to destroy.


Warning: Version constraints inside provider configuration blocks are deprecated

  on main-rg.tf line 2, in provider "azurerm":
   2: version = "=2.44"

Terraform 0.13 and earlier allowed provider version constraints inside the
provider configuration block, but that is now deprecated and will be removed
in a future version of Terraform. To silence this warning, move the provider
version constraint into the required_providers block.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

azurerm_resource_group.rg: Creating...
azurerm_resource_group.rg: Creation complete after 2s [id=/subscriptions/2674f6e7-3efc-4eaf-8348-e1267995345e/resourceGroups/NZE-P-DMZROK-RGP-001]

Apply complete! Resources: 1 added, 0 changed, 0 destroyed.
PS C:\tools\terraform\tf-azure-rg>
